docker build -t devframe-apache .

docker build -t devframe-tomcat .

docker run -p 8009:8009 --rm --name=devframe-tomcat devframe-tomcat
docker run -p 80:80 --rm --name=devframe-apache devframe-apache
 - /devframe-docker/apache/conf/workers.properties
   worker.worker1.host=192.168.99.100

docker run --rm --name=devframe-tomcat devframe-tomcat
docker run -p 80:80 --rm --name=devframe-apache --link="devframe-tomcat:devframe-tomcat" devframe-apache
 - /devframe-docker/apache/conf/workers.properties
   worker.worker1.host=devframe-tomcat

docker pull redis

docker run --name=devframe-redis -d -p 6379:6379 redis

docker run -it --link devframe-redis:redis --rm redis redis-cli -h redis -p 6379

OR

docker exec -it 4e37e9a952f9 bash
root@4e37e9a952f9:/data# redis-cli -h localhost -p 6379
localhost:6379> keys *
localhost:6379> exit



docker build -t devframe-web .

docker run --name=devframe-web --rm -d -p 7070:8080 devframe-web



docker rmi -f $(docker images -q)
docker images

docker rm -f $(docker ps -aq)
docker ps -a



docker build -t devframe-web-tomcat
docker tag devframe-web-tomcat devframe/devframe-web-tomcat
docker push devframe/devframe-web-tomcat
kubectl apply -f devframe-web-tomcat-deployment.yaml
kubectl apply -f devframe-web-tomcat-service.yaml

kubectl get po
 - 8009 포트와 바인딩된 외부포트번호를 확인하여 apache 의 workers.properties 파일에 아래와 같이 설정한다.
   worker.worker1.host=192.168.99.101	<-- minikube status 로 확인된 호스트 아이피(Worker Node IP)
   worker.worker1.port=32640	<-- 8009 포트와 바인딩 된 현재 포트(배포시마다 가변적임)

docker build -t devframe-web-apache
docker tag devframe-web-apache devframe/devframe-web-apache
docker push devframe/devframe-web-apache
kubectl apply -f devframe-web-apache-deployment.yaml
kubectl apply -f devframe-web-apache-service.yaml

kubectl get po
 - 80 포트와 바인딩된 외부포트번호를 확인하여 브라우저로 확인한다.
   http://192.168.99.101:30744	<-- 80 포트와 바인딩 된 현재 포트(배포시마다 가변적임)


*. 해야할 것
도커 컨테이너 내부 링크로 설정하여 가변적인 외부 포트 설정을 하지 않도록 한다.
